package com.mobile.framework.webservices;


	import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;

import javax.net.ssl.HttpsURLConnection;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.NameValuePair;
import android.util.Log;
		
	public class HttpFileUpload implements Runnable{
	        URL connectURL;
	        String responseString;
	        String Title;
	        String Description;
	        byte[ ] dataToServer;
	        String FileName;
	        String col_id="";
	        String apregno="";
	        private final String USER_AGENT = "Mozilla/5.0";
	        FileInputStream fileInputStream = null;

	        public HttpFileUpload(String urlString, String vFilename,String vcol_id,String vapregno){
	                try{
	                        connectURL = new URL(urlString);
	                        FileName=vFilename;
	                        col_id=vcol_id;
	                        apregno=vapregno;
	                }catch(Exception ex){
	                    Log.i("HttpFileUpload","URL Malformatted");
	                }
	        }
		
	        public String Send_Now(FileInputStream fStream){
	                fileInputStream = fStream;
	                return Sending();
	        }
	        private void sendPost() throws Exception {

	    		String url = "http://192.168.1.3/biimobilesme/Contract/upload.aspx";

	    		HttpClient client = new DefaultHttpClient();
	    		HttpPost post = new HttpPost(url);

	    		// add header
	    		post.setHeader("User-Agent", USER_AGENT);

	    		List<NameValuePair> urlParameters = new ArrayList<NameValuePair>();
	    		urlParameters.add(new BasicNameValuePair("namafile", "test.jpeg"));
	    		urlParameters.add(new BasicNameValuePair("cn", ""));
	    		urlParameters.add(new BasicNameValuePair("locale", ""));
	    		urlParameters.add(new BasicNameValuePair("caller", ""));
	    		urlParameters.add(new BasicNameValuePair("num", "12345"));

	    		post.setEntity(new UrlEncodedFormEntity(urlParameters));

	    		HttpResponse response = client.execute(post);
	    		System.out.println("\nSending 'POST' request to URL : " + url);
	    		System.out.println("Post parameters : " + post.getEntity());
	    		System.out.println("Response Code : " + 
	                                        response.getStatusLine().getStatusCode());

	    		BufferedReader rd = new BufferedReader(
	                            new InputStreamReader(response.getEntity().getContent()));

	    		StringBuffer result = new StringBuffer();
	    		String line = "";
	    		while ((line = rd.readLine()) != null) {
	    			result.append(line);
	    		}

	    		System.out.println(result.toString());

	    	}
	     // HTTP POST request
	    	private void sendPosturl() throws Exception {

	    		String url = "https://selfsolve.apple.com/wcResults.do";
	    		URL obj = new URL(url);
	    		HttpsURLConnection con = (HttpsURLConnection) obj.openConnection();

	    		//add reuqest header
	    		con.setRequestMethod("POST");
	    		con.setRequestProperty("User-Agent", USER_AGENT);
	    		con.setRequestProperty("Accept-Language", "en-US,en;q=0.5");

	    		String urlParameters = "sn=C02G8416DRJM&cn=&locale=&caller=&num=12345";
	    		
	    		// Send post request
	    		con.setDoOutput(true);
	    		DataOutputStream wr = new DataOutputStream(con.getOutputStream());
	    		wr.writeBytes(urlParameters);
	    		wr.flush();
	    		wr.close();

	    		int responseCode = con.getResponseCode();
	    		System.out.println("\nSending 'POST' request to URL : " + url);
	    		System.out.println("Post parameters : " + urlParameters);
	    		System.out.println("Response Code : " + responseCode);

	    		BufferedReader in = new BufferedReader(
	    		        new InputStreamReader(con.getInputStream()));
	    		String inputLine;
	    		StringBuffer response = new StringBuffer();

	    		while ((inputLine = in.readLine()) != null) {
	    			response.append(inputLine);
	    		}
	    		in.close();
	    		
	    		//print result
	    		System.out.println(response.toString());

	    	}
	    	public String sendFilePost(String urlServer, String pathToOurFile){
                HttpURLConnection connection = null;
                DataOutputStream outputStream = null;
                DataInputStream inputStream = null;
                String lineEnd = "\r\n";
                String twoHyphens = "--";
                String boundary =  "*****";
                int bytesRead, bytesAvailable, bufferSize;
                byte[] buffer;
                int maxBufferSize = 1*1024*1024;
                try
                {
                FileInputStream fileInputStream = new FileInputStream(new File(pathToOurFile) );
                URL url = new URL(urlServer);
                connection = (HttpURLConnection) url.openConnection();
                connection.setDoInput(true);
                connection.setDoOutput(true);
                connection.setUseCaches(false);
                connection.setRequestMethod("POST");
                connection.setRequestProperty("Connection", "Keep-Alive");
                connection.setRequestProperty("Content-Type", "multipart/form-data;boundary="+boundary);

                outputStream = new DataOutputStream( connection.getOutputStream() );
                outputStream.writeBytes("Content-Disposition: form-data; name=\"namafile\""+ lineEnd);
                outputStream.writeBytes(lineEnd);
                outputStream.writeBytes(FileName);
                outputStream.writeBytes(lineEnd);
                               
               
                outputStream.writeBytes(twoHyphens + boundary + lineEnd);
                outputStream.writeBytes("Content-Disposition: form-data; name=\"uploadedfile\";filename=\"" + pathToOurFile +"\"" + lineEnd);
                outputStream.writeBytes(lineEnd);

                bytesAvailable = fileInputStream.available();
                bufferSize = Math.min(bytesAvailable, maxBufferSize);
                buffer = new byte[bufferSize];

                // Read file
                bytesRead = fileInputStream.read(buffer, 0, bufferSize);

                while (bytesRead > 0)
                {
                outputStream.write(buffer, 0, bufferSize);
                bytesAvailable = fileInputStream.available();
                bufferSize = Math.min(bytesAvailable, maxBufferSize);
                bytesRead = fileInputStream.read(buffer, 0, bufferSize);
                }

                outputStream.writeBytes(lineEnd);
                outputStream.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);

                // Responses from the server (code and message)
                String serverResponseMessage = connection.getResponseMessage();
                InputStream is = connection.getErrorStream();
                BufferedReader rd = new BufferedReader(new InputStreamReader(is));
                String line;
                StringBuffer response = new StringBuffer(); 
                while((line = rd.readLine()) != null) {
                     response.append(line);
                }
                String rrrr = response.toString();
                rd.close();
                fileInputStream.close();
                outputStream.flush();
                outputStream.close();
                 return rrrr;
                }
                catch (Exception ex)
                {
                    return "Something went wrong!";
                }
            }
	        private String Sending(){
	        	String retval="";
	                String iFileName = FileName;
	                String lineEnd = "\r\n";
	                String twoHyphens = "--";
	                String boundary = "*****";
	                String Tag="fSnd";
	                try
	                {
	                        Log.e(Tag,"Starting Http File Sending to URL");
		
	                        // Open a HTTP connection to the URL
	                        HttpURLConnection conn = (HttpURLConnection)connectURL.openConnection();
	                        
	                        conn.setConnectTimeout(500);
	                        
	                        // Allow Inputs
	                        conn.setDoInput(true);
		
	                        // Allow Outputs
	                        conn.setDoOutput(true);
		
	                        // Don't use a cached copy.
	                        conn.setUseCaches(false);
	                        
	                        // Use a post method.
	                        conn.setRequestMethod("POST");
		
	                        conn.setRequestProperty("Connection", "Keep-Alive");
		
	                        conn.setRequestProperty("Content-Type", "multipart/form-data;boundary="+boundary);
	                       // conn.connect();
	                        
	                        //if (conn.getResponseCode() == HttpURLConnection.HTTP_OK) { 
		                        DataOutputStream dos = new DataOutputStream(conn.getOutputStream());
			
		                        dos.writeBytes(twoHyphens + boundary + lineEnd);
		                        dos.writeBytes("Content-Disposition: form-data; name=\"colid\""+ lineEnd);
		                        dos.writeBytes(lineEnd);
		                        dos.writeBytes(Title);
		                        dos.writeBytes(lineEnd);
		                        dos.writeBytes(twoHyphens + boundary + lineEnd);
			                    
		                        dos.writeBytes("Content-Disposition: form-data; name=\"apregno\""+ lineEnd);
		                        dos.writeBytes(lineEnd);
		                        dos.writeBytes(Description);
		                        dos.writeBytes(lineEnd);
		                        dos.writeBytes(twoHyphens + boundary + lineEnd);
		                        
		                        dos.writeBytes("Content-Disposition: form-data; name=\"namafile\""+ lineEnd);
		                        dos.writeBytes(lineEnd);
		                        dos.writeBytes(iFileName);
		                        dos.writeBytes(lineEnd);
		                        dos.writeBytes(twoHyphens + boundary + lineEnd);
			                    
		                        
		                        dos.writeBytes("Content-Disposition: form-data; name=\"uploadedfile\";filename=\"" + iFileName +"\"" + lineEnd);
		                        dos.writeBytes(lineEnd);
			
		                        Log.e(Tag,"Headers are written");
			
		                        // create a buffer of maximum size
		                        int bytesAvailable = fileInputStream.available();
			                        
		                        int maxBufferSize = 1024;
		                        int bufferSize = Math.min(bytesAvailable, maxBufferSize);
		                        byte[ ] buffer = new byte[bufferSize];
			
		                        // read file and write it into form...
		                        int bytesRead = fileInputStream.read(buffer, 0, bufferSize);
			
		                        while (bytesRead > 0)
		                        {
		                                dos.write(buffer, 0, bufferSize);
		                                bytesAvailable = fileInputStream.available();
		                                bufferSize = Math.min(bytesAvailable,maxBufferSize);
		                                bytesRead = fileInputStream.read(buffer, 0,bufferSize);
		                        }
		                        dos.writeBytes(lineEnd);
		                        dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);
			
		                        // close streams
		                        fileInputStream.close();
			                        
		                        dos.flush();
			                        
		                       
			                    //if(conn.getResponseCode()==null)
			                    	
		                        InputStream is =null;
		                        is=conn.getErrorStream();
		                        
		                        
		                        
		                        if(is==null){
		                        	is = conn.getInputStream();		
		                        	 Log.e(Tag,"File Sent, Response: "+String.valueOf(conn.getResponseCode()));
		                        }
		                        
		                        // retrieve the response from server
		                        int ch;
			
		                        StringBuffer b =new StringBuffer();
		                        while( ( ch = is.read() ) != -1 ){ b.append( (char)ch ); }
		                        String s=b.toString();
		                        retval=s;
		                        Log.i("Response",s);
		                        dos.close();
	                        //}
	                }
	                catch (MalformedURLException ex)
	                {
	                        Log.e(Tag, "URL error: " + ex.getMessage(), ex);
	                }
		
	                catch (IOException ioe)
	                {
	                        Log.e(Tag, "IO error: " + ioe.getMessage(), ioe);
	                }
	                catch (Exception e) {
	                	 Log.e(Tag, "IO error: " + e.getMessage(), e);
					}
	                return retval;
	        }
		
	        @Override
	        public void run() {
	                // TODO Auto-generated method stub
	        }
	}
